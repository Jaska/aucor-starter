{"version":3,"sources":["../assets/scripts/lib/markup-enhancements.js"],"names":["tag_first_and_last_block","gutenberg_content","document","querySelector","i","childNodes","length","nodeType","classList","add","responsive_tables_in_content","tables","querySelectorAll","wrapper","createElement","setAttribute","getAttribute","removeAttribute","parentNode","insertBefore","appendChild","wrap_old_images_with_caption","figures","contains","wrap_old_aligned_images","aligned_parent","aligned","nodeName","removeChild","alignment","remove","figure","div","body_hero_background_indicator","body","init_lightboxes_in_content","imgItems","forEach","item","formats","href","some","el","includes","nextElementSibling","toLowerCase","dataset","caption","innerText","addEventListener"],"mappings":"aAOA,IAAIA,yBAA2B,WAE7B,IAAIC,EAAoBC,SAASC,cAAc,YAC/C,GAAIF,EAAmB,CACrB,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAkBI,WAAWC,OAAQF,IACvD,GAAiD,IAA7CH,EAAkBI,WAAWD,GAAGG,UAAgE,cAA9CN,EAAkBI,WAAWD,GAAGI,UAA2B,CAC/GP,EAAkBI,WAAWD,GAAGI,UAAUC,IAAI,kBAC9C,MAGJ,IAAK,IAAIL,EAAKH,EAAkBI,WAAWC,OAAS,EAAS,GAALF,EAAQA,IAC9D,GAAiD,IAA7CH,EAAkBI,WAAWD,GAAGG,UAAgE,cAA9CN,EAAkBI,WAAWD,GAAGI,UAA2B,CAC/GP,EAAkBI,WAAWD,GAAGI,UAAUC,IAAI,iBAC9C,SAWJC,6BAA+B,WAEjC,IAAMC,EAAST,SAASU,iBAAiB,kCACzC,GAAID,EACF,IAAK,IAAIP,EAAI,EAAGA,EAAIO,EAAOL,OAAQF,IAAK,CAGtCO,EAAOP,GAAGI,UAAUC,IAAI,8BAGxB,IAAII,EAAUX,SAASY,cAAc,OAGrCD,EAAQE,aAAa,QAASJ,EAAOP,GAAGY,aAAa,UAGrDL,EAAOP,GAAGa,gBAAgB,SAG1BN,EAAOP,GAAGc,WAAWC,aAAaN,EAASF,EAAOP,IAClDS,EAAQO,YAAYT,EAAOP,MAa7BiB,6BAA+B,WACjC,IAAIC,EAAUpB,SAASU,iBAAiB,wBACxC,GAAIU,EAAQhB,OACV,IAAK,IAEGO,EAFCT,EAAI,EAAGA,EAAIkB,EAAQhB,OAAQF,IAAK,CAClCkB,EAAQlB,GAAGc,WAAWV,UAAUe,SAAS,qBACxCV,EAAUX,SAASY,cAAc,QAC7BC,aAAa,QAAS,kBAC9BO,EAAQlB,GAAGc,WAAWC,aAAaN,EAASS,EAAQlB,IACpDS,EAAQO,YAAYE,EAAQlB,OAKpCiB,+BAQA,IAAIG,wBAA0B,WAC5B,IAAIC,EACAC,EAAUxB,SAASU,iBAAiB,mDACxC,GAAIc,EAAQpB,OACV,IAAK,IAAIF,EAAI,EAAGA,EAAIsB,EAAQpB,OAAQF,IAAK,CAMP,OAHhCqB,EAAiBC,EAAQtB,GAAGc,YAGTS,WACjBF,EAAeP,WAAWC,aAAaO,EAAQtB,GAAIqB,GAEV,IAArCA,EAAepB,WAAWC,QAC5BmB,EAAeP,WAAWU,YAAYH,IAK1C,IAAII,EAAaH,EAAQtB,GAAGI,UAAUe,SAAS,aAAgB,YAAc,aAC7EG,EAAQtB,GAAGI,UAAUsB,OAAOD,GAG5B,IAAIE,EAAS7B,SAASY,cAAc,UACpCiB,EAAOhB,aAAa,QAASc,GAC7BH,EAAQtB,GAAGc,WAAWC,aAAaY,EAAQL,EAAQtB,IACnD2B,EAAOX,YAAYM,EAAQtB,IAG3B,IAAI4B,EAAM9B,SAASY,cAAc,OACjCkB,EAAIjB,aAAa,QAAS,kBAC1BgB,EAAOb,WAAWC,aAAaa,EAAKD,GACpCC,EAAIZ,YAAYW,KAKtBP,0BAKA,IAAIS,+BAAiC,WAE/B/B,SAASC,cAAc,yBACzBD,SAASgC,KAAK1B,UAAUC,IAAI,2BAIhCwB,iCAcA,IAAIE,2BAA6B,WAC/B,IAAIC,EAAWlC,SAASU,iBAAiB,iIAErCwB,EAAS9B,QACX8B,EAASC,QAAQ,SAASC,GACxB,IAAIC,EAAU,CAAC,OAAQ,OAAQ,QAAS,QAEpCD,EAAKE,MACHD,EAAQE,KAAK,SAAAC,GAAE,OAAIJ,EAAKE,KAAKG,SAASD,MACxCJ,EAAK9B,UAAUC,IAAI,YAGjB6B,EAAKM,mBACgD,eAAnDN,EAAKM,mBAAmBjB,SAASkB,gBACnCP,EAAKQ,QAAQC,QAAUT,EAAKM,mBAAmBI,WAExCV,EAAKpB,WAAW0B,oBACyC,eAA9DN,EAAKpB,WAAW0B,mBAAmBjB,SAASkB,gBAC9CP,EAAKQ,QAAQC,QAAUT,EAAKpB,WAAW0B,mBAAmBI,YAGrDV,EAAKpB,WAAWsB,MACrBD,EAAQE,KAAK,SAAAC,GAAE,OAAIJ,EAAKpB,WAAWsB,KAAKG,SAASD,MACnDJ,EAAKpB,WAAWV,UAAUC,IAAI,eAWxCP,SAAS+C,iBAAiB,mBAAoB,WAC5CjD,2BACAU,+BACAW,+BACAG,0BACAS,iCACAE","file":"critical.js","sourcesContent":["/**\n * Content markup enhancements\n */\n\n/**\n * Add identifiers for first and last block\n */\nlet tag_first_and_last_block = function() {\n\n  let gutenberg_content = document.querySelector('.wysiwyg');\n  if (gutenberg_content) {\n    for (let i = 0; i < gutenberg_content.childNodes.length; i++) {\n      if (gutenberg_content.childNodes[i].nodeType !== 3 && gutenberg_content.childNodes[i].classList !== \"undefined\") {\n        gutenberg_content.childNodes[i].classList.add('is-first-block');\n        break;\n      }\n    }\n    for (let i = (gutenberg_content.childNodes.length - 1); i >= 0; i--) {\n      if (gutenberg_content.childNodes[i].nodeType !== 3 && gutenberg_content.childNodes[i].classList !== \"undefined\") {\n        gutenberg_content.childNodes[i].classList.add('is-last-block');\n        break;\n      }\n    }\n  }\n\n}\n\n\n/**\n * Make tables responsive\n */\nlet responsive_tables_in_content = function() {\n\n  const tables = document.querySelectorAll('.wysiwyg .wp-block-table table');\n  if (tables) {\n    for (var i = 0; i < tables.length; i++) {\n\n      // add modifier class to affected table\n      tables[i].classList.add('wp-block-table--responsive');\n\n      // create new wrapper\n      var wrapper = document.createElement('div');\n\n      // take all classes from table\n      wrapper.setAttribute('class', tables[i].getAttribute('class'));\n\n      // reset table classes\n      tables[i].removeAttribute('class');\n\n      // wrap the table\n      tables[i].parentNode.insertBefore(wrapper, tables[i]);\n      wrapper.appendChild(tables[i]);\n\n    }\n  }\n\n};\n\n/**\n * Classic Editor image markup \"polyfill\"\n *\n * Wrap old images with captions to make alignment work and markup fit Gutenberg style\n * <figure class=\"wp-caption\"><img></figure> => <div class=\"wp-block-image\"><figure class=\"wp-caption\"><img></figure></div>\n */\nlet wrap_old_images_with_caption = function() {\n  let figures = document.querySelectorAll('.wysiwyg .wp-caption');\n  if (figures.length) {\n    for (let i = 0; i < figures.length; i++) {\n      if (!figures[i].parentNode.classList.contains('wp-block-image')) {\n        let wrapper = document.createElement('div');\n        wrapper.setAttribute('class', 'wp-block-image');\n        figures[i].parentNode.insertBefore(wrapper, figures[i]);\n        wrapper.appendChild(figures[i]);\n      }\n    }\n  }\n};\nwrap_old_images_with_caption();\n\n/**\n * Classic Editor aligned image markup \"polyfill\"\n *\n * Wrap old aligned images without caption to make markup fit Gutenberg style\n * <p><img class=\"alignleft\">Text<p> => <div class=\"wp-block-image\"><figure class=\"alignleft\"><img></figure></div><p>Text</p>\n */\nlet wrap_old_aligned_images = function() {\n  let aligned_parent;\n  let aligned = document.querySelectorAll('.wysiwyg img.alignleft, .wysiwyg img.alignright');\n  if (aligned.length) {\n    for (var i = 0; i < aligned.length; i++) {\n\n      // save references\n      aligned_parent = aligned[i].parentNode;\n\n      // if parent is paragraph, unwrap\n      if (aligned_parent.nodeName === 'P') {\n        aligned_parent.parentNode.insertBefore(aligned[i], aligned_parent);\n        // remove paragraph if its now empty\n        if (aligned_parent.childNodes.length === 0) {\n          aligned_parent.parentNode.removeChild(aligned_parent);\n        }\n      }\n\n      // find and remove alignment from img\n      var alignment = (aligned[i].classList.contains('alignleft')) ? 'alignleft' : 'alignright';\n      aligned[i].classList.remove(alignment);\n\n      // wrap with figure\n      var figure = document.createElement('figure');\n      figure.setAttribute('class', alignment);\n      aligned[i].parentNode.insertBefore(figure, aligned[i]);\n      figure.appendChild(aligned[i]);\n\n      // wrap with .wp-block-image\n      var div = document.createElement('div');\n      div.setAttribute('class', 'wp-block-image');\n      figure.parentNode.insertBefore(div, figure);\n      div.appendChild(figure);\n\n    }\n  }\n};\nwrap_old_aligned_images();\n\n/**\n * Add body class .has-no-hero-background\n */\nvar body_hero_background_indicator = function() {\n\n  if (document.querySelector('.hero--no-background')) {\n    document.body.classList.add('has-no-hero-background');\n  }\n\n};\nbody_hero_background_indicator();\n\n/**\n * Lightbox (Tobi.js) support for native gallery and images\n * Requires link to media file from gallery/image settings.\n *\n * Try to find the a-tag parents to the images (the img-tag itself with the last two selectors), both gutenberg and classic editor.\n * Selectors:\n *   gutenberg gallery,\n *   classic gallery,\n *   gutenberg images AND classic images with caption,\n *   classic images without caption and with no or center align,\n *   classic images without caption and with left or right align\n */\nlet init_lightboxes_in_content = function() {\n  var imgItems = document.querySelectorAll('.blocks-gallery-item > figure > a, .gallery-item > .gallery-icon > a, .wp-block-image a, p > a > img, p > a > .wp-block-image');\n  // if found, add .lightbox class that Tobi uses as selector to the items\n  if (imgItems.length) {\n    imgItems.forEach(function(item) {\n      var formats = ['.jpg', '.png', '.jpeg', '.gif'];\n      // check (3 first selectors) href to verify media link\n      if (item.href) {\n        if (formats.some(el => item.href.includes(el))) {\n          item.classList.add('lightbox');\n        }\n        // check for figcaption (images and gutenberg gallery) and add it to a data attribute\n        if (item.nextElementSibling) {\n          if (item.nextElementSibling.nodeName.toLowerCase() === 'figcaption') {\n            item.dataset.caption = item.nextElementSibling.innerText;\n          }\n        } else if (item.parentNode.nextElementSibling) { // classic gallery\n          if (item.parentNode.nextElementSibling.nodeName.toLowerCase() === 'figcaption') {\n            item.dataset.caption = item.parentNode.nextElementSibling.innerText;\n          }\n        }\n      } else if (item.parentNode.href) { // check (2 last selectors) href to verify media link\n        if (formats.some(el => item.parentNode.href.includes(el))) {\n          item.parentNode.classList.add('lightbox');\n        }\n      }\n    });\n  }\n}\n\n\n/**\n * Run\n */\ndocument.addEventListener('DOMContentLoaded', function() {\n  tag_first_and_last_block();\n  responsive_tables_in_content();\n  wrap_old_images_with_caption();\n  wrap_old_aligned_images();\n  body_hero_background_indicator();\n  init_lightboxes_in_content();\n});\n"],"sourceRoot":"assets/scripts/"}